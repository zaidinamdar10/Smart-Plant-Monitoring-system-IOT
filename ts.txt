#include <ESP8266WiFi.h>
#include<DHT.h>
 
String apiKey = "10MYKGRQMYPEZUDB";     //  Enter your Write API key from ThingSpeak
 
const char *ssid =  "Tp link";     // replace with your wifi ssid and wpa2 key
const char *pass =  "zaidqwerty256";
const char* server = "api.thingspeak.com";
 
#define DHTPIN 4        //pin where the dht22 is connected d2 is gpio 4
 
DHT dht(DHTPIN, DHT22);
 
WiFiClient client;
 
void setup() 
{
       Serial.begin(115200);
       delay(10);
       dht.begin();
 
       Serial.println("Connecting to ");
       Serial.println(ssid);
 
 
       WiFi.begin(ssid, pass);
 
      while (WiFi.status() != WL_CONNECTED) 
     {
            delay(500);
            Serial.print(".");
     }
      Serial.println("");
      Serial.println("WiFi connected");
 
}
 
void loop() 
{
  
      float h = dht.readHumidity();
      float t = dht.readTemperature();
      
              if (isnan(h) || isnan(t)) 
                 {
                     Serial.println("Failed to read from DHT sensor!");
                      return;
                 }

               float m = analogRead(D5);
                if (isnan(m))
                {
                    Serial.println("Failed to read from MQ-5 sensor!");
                    return;
                } 

                float sm =analogRead(A0);
                if(isnan(sm)){
                  Serial.println("Failed");
                  return;
                }

                float LDR=analogRead(A0);
                if(isnan(LDR)){
                  Serial.println("Failed");
                  return;
                }



                
                         if (client.connect(server,80))   //   "184.106.153.149" or api.thingspeak.com
                      {  
                            
                             String postStr = apiKey;
                             postStr +="&field1=";
                             postStr += String(t);
                             postStr +="&field2=";
                             postStr += String(h);
                            
                            /*Air Quality*/
                             postStr += "&field4=";
                             postStr += String(m/1023*100);
                             //postStr += "\r\n\r\n\r\n";
                              
                             //Soil 
                             postStr += "&field3=";
                             postStr += String(sm);
                            

                             //Light 
                             postStr += "&field5=";
                             postStr += String(LDR);
                             postStr += "\r\n\r\n\r\n\r\n\r\n";

                              
 
                             client.print("POST /update HTTP/1.1\n");
                             client.print("Host: api.thingspeak.com\n");
                             client.print("Connection: close\n");
                             client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");
                             client.print("Content-Type: application/x-www-form-urlencoded\n");
                             client.print("Content-Length: ");
                             client.print(postStr.length());
                             client.print("\n\n\n\n\n");
                             client.print(postStr);
 
                             Serial.print("Temperature: ");
                             Serial.print(t);
                             Serial.print(" degrees Celcius, Humidity: ");
                             Serial.print(h);
                             Serial.print("Gas Level: ");
                             Serial.println(m/1023*100);
                             Serial.print(" soil moisture: ");
                             Serial.print(sm);
                             Serial.print(" Light Intensity: ");
                             Serial.print(LDR);
                             
                             Serial.println("%. Send to Thingspeak.");

                             
                        }
          client.stop();
          delay(500);
          Serial.println("Waiting...");
  
  // thingspeak needs minimum 15 sec delay between updates
  delay(50);
}